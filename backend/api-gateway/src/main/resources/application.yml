server:
  port: 8080

spring:
  application:
    name: api-gateway
  
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      
      routes:
        # Authentication Service
        - id: auth-service
          uri: lb://auth-service
          predicates:
            - Path=/api/auth/**
          filters:
            - StripPrefix=1
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
        
        # Patient Service
        - id: patient-service
          uri: lb://patient-service
          predicates:
            - Path=/api/patients/**
          filters:
            - StripPrefix=1
            - name: JwtAuthenticationFilter
        
        # Doctor Service
        - id: doctor-service
          uri: lb://doctor-service
          predicates:
            - Path=/api/doctors/**
          filters:
            - StripPrefix=1
            - name: JwtAuthenticationFilter
        
        # Appointment Service
        - id: appointment-service
          uri: lb://appointment-service
          predicates:
            - Path=/api/appointments/**
          filters:
            - StripPrefix=1
            - name: JwtAuthenticationFilter
        
        # Billing Service
        - id: billing-service
          uri: lb://billing-service
          predicates:
            - Path=/api/billing/**
          filters:
            - StripPrefix=1
            - name: JwtAuthenticationFilter
        
        # Notification Service
        - id: notification-service
          uri: lb://notification-service
          predicates:
            - Path=/api/notifications/**
          filters:
            - StripPrefix=1
            - name: JwtAuthenticationFilter
        
        # Audit Service
        - id: audit-service
          uri: lb://audit-service
          predicates:
            - Path=/api/audit/**
          filters:
            - StripPrefix=1
            - name: JwtAuthenticationFilter

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080
          jwk-set-uri: http://localhost:8080/.well-known/jwks.json

# Eureka Client Configuration
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${server.port}

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,gateway
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# Logging Configuration
logging:
  level:
    com.hms.gateway: DEBUG
    org.springframework.cloud.gateway: DEBUG
    org.springframework.security: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# JWT Configuration
jwt:
  secret: your-secret-key-here-make-it-long-and-secure-for-production
  expiration: 86400000 # 24 hours in milliseconds
  refresh-expiration: 604800000 # 7 days in milliseconds

# CORS Configuration
cors:
  allowed-origins: 
    - http://localhost:4200
    - http://localhost:3000
  allowed-methods:
    - GET
    - POST
    - PUT
    - DELETE
    - OPTIONS
  allowed-headers:
    - "*"
  allow-credentials: true
  max-age: 3600 